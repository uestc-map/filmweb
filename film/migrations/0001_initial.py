# Generated by Django 2.1.7 on 2019-05-04 19:42

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('money', models.IntegerField(default=0, max_length=20, verbose_name='余额')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='daily',
            fields=[
                ('date', models.DateField(default='1999-01-01', primary_key=True, serialize=False, verbose_name='日期')),
                ('money', models.IntegerField(default='0', max_length=20, verbose_name='票房')),
            ],
            options={
                'verbose_name': '每日票房',
                'verbose_name_plural': '每日票房',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='film',
            fields=[
                ('filmName', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='电影名')),
                ('filmDName', models.CharField(max_length=20, verbose_name='导演')),
                ('filmAName', models.CharField(max_length=45, verbose_name='演员')),
                ('filmScore', models.FloatField(default='0', verbose_name='评分')),
                ('image', models.ImageField(default='', upload_to='film/filmimage/', verbose_name='海报')),
                ('category', models.CharField(default='动作', max_length=10, verbose_name='分类')),
                ('evaluateNum', models.IntegerField(default=0, max_length=10, verbose_name='评分人次')),
                ('showDate', models.DateField(default='1999-01-01', verbose_name='上映时间')),
                ('deleteDate', models.DateField(default='1999-01-01', verbose_name='下线时间')),
                ('filmScoreUser', models.CharField(default='0', max_length=1000, verbose_name='已评分用户id')),
                ('total', models.IntegerField(default=0, max_length=20, verbose_name='票房')),
            ],
            options={
                'verbose_name': '电影',
                'verbose_name_plural': '电影',
                'ordering': ['-filmScore', 'showDate'],
            },
        ),
        migrations.CreateModel(
            name='filmscence',
            fields=[
                ('dateTime', models.DateTimeField(default=django.utils.timezone.now, primary_key=True, serialize=False, verbose_name='时间')),
                ('seat', models.CharField(default='0', max_length=300, verbose_name='已售座位列表')),
                ('price', models.IntegerField(default=30, max_length=20, verbose_name='票价')),
                ('remain', models.IntegerField(default='99', max_length=20, verbose_name='剩余座位')),
                ('money', models.IntegerField(default='0', max_length=20, verbose_name='场次票房')),
                ('filmName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='film.film', verbose_name='电影名')),
            ],
            options={
                'verbose_name': '场次',
                'verbose_name_plural': '场次',
                'ordering': ['-dateTime'],
            },
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('orderId', models.IntegerField(max_length=20, primary_key=True, serialize=False, verbose_name='订单号')),
                ('seat', models.CharField(max_length=10, verbose_name='座位号')),
                ('order_m', models.IntegerField(default='0', max_length=20, verbose_name='实付金额')),
                ('order_time', models.DateTimeField(auto_now_add=True, verbose_name='购票时间')),
                ('dateTime', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='film.filmscence', verbose_name='场次')),
                ('filmName', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='film.film', verbose_name='电影名')),
                ('userName', models.ForeignKey(default='admin', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='用户名')),
            ],
            options={
                'verbose_name': '订单',
                'verbose_name_plural': '订单',
                'ordering': ['userName', 'dateTime', '-order_time'],
            },
        ),
    ]
